// <auto-generated />
using Airport.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airport.DAL.EF.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20250628180628_Migration5")]
    partial class Migration5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airport.DAL.EF.Entities.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlightHours")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AircraftTypeId");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.AircraftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AircraftTypes");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.AirportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.FlightDestination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<int>("AirportId")
                        .HasColumnType("int");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TicketPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("AirportId");

                    b.HasIndex("PassengerId");

                    b.ToTable("FlightDestinations");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.PilotAircraft", b =>
                {
                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.HasKey("PilotId", "AircraftId");

                    b.HasIndex("AircraftId");

                    b.ToTable("PilotAircrafts");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Aircraft", b =>
                {
                    b.HasOne("Airport.DAL.EF.Entities.AircraftType", "AircraftType")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AircraftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftType");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.FlightDestination", b =>
                {
                    b.HasOne("Airport.DAL.EF.Entities.Aircraft", "Aircraft")
                        .WithMany("FlightDestinations")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.DAL.EF.Entities.AirportEntity", "Airport")
                        .WithMany("FlightDestinations")
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.DAL.EF.Entities.Passenger", "Passenger")
                        .WithMany("FlightDestinations")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Airport");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.PilotAircraft", b =>
                {
                    b.HasOne("Airport.DAL.EF.Entities.Aircraft", "Aircraft")
                        .WithMany("PilotAircrafts")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.DAL.EF.Entities.Pilot", "Pilot")
                        .WithMany("PilotAircrafts")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Pilot");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Aircraft", b =>
                {
                    b.Navigation("FlightDestinations");

                    b.Navigation("PilotAircrafts");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.AircraftType", b =>
                {
                    b.Navigation("Aircrafts");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.AirportEntity", b =>
                {
                    b.Navigation("FlightDestinations");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Passenger", b =>
                {
                    b.Navigation("FlightDestinations");
                });

            modelBuilder.Entity("Airport.DAL.EF.Entities.Pilot", b =>
                {
                    b.Navigation("PilotAircrafts");
                });
#pragma warning restore 612, 618
        }
    }
}
